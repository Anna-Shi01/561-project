10
MotherOf(Jess,Helen)
BrotherOf(James,Simon)
AncesterOf(Jack,Simon)
GrandMotherOf(Sophie,Harry)
WifeOf(Jess,Ali)
SisterOf(Lily,Jess)
SisterOf(Lily,LILY)
HusbandOf(James,Helen)
Couple(Sophie,Ali)
ParentOf(Harry,Jack)
89
Equal(x,x)
Equal(x,y) => Equal(y,x)
Equal(x,y) => ~NotEqual(x,y)
Equal(LILY,Lily)
NotEqual(x,y) => NotEqual(y,x)
NotEqual(Jack,Oliver)
NotEqual(Jack,Ali)
NotEqual(Jack,James)
NotEqual(Jack,Simon)
NotEqual(Jack,Harry)
NotEqual(Jack,Helen)
NotEqual(Jack,Sophie)
NotEqual(Jack,Jess)
NotEqual(Jack,Lily)
NotEqual(Oliver,Ali)
NotEqual(Oliver,James)
NotEqual(Oliver,Simon)
NotEqual(Oliver,Harry)
NotEqual(Oliver,Helen)
NotEqual(Oliver,Sophie)
NotEqual(Oliver,Jess)
NotEqual(Oliver,Lily)
NotEqual(Ali,James)
NotEqual(Ali,Simon)
NotEqual(Ali,Harry)
NotEqual(Ali,Helen)
NotEqual(Ali,Sophie)
NotEqual(Ali,Jess)
NotEqual(Ali,Lily)
NotEqual(James,Simon)
NotEqual(James,Harry)
NotEqual(James,Helen)
NotEqual(James,Sophie)
NotEqual(James,Jess)
NotEqual(James,Lily)
NotEqual(Simon,Harry)
NotEqual(Simon,Helen)
NotEqual(Simon,Sophie)
NotEqual(Simon,Jess)
NotEqual(Simon,Lily)
NotEqual(Harry,Helen)
NotEqual(Harry,Sophie)
NotEqual(Harry,Jess)
NotEqual(Harry,Lily)
NotEqual(Helen,Sophie)
NotEqual(Helen,Jess)
NotEqual(Helen,Lily)
NotEqual(Sophie,Jess)
NotEqual(Sophie,Lily)
NotEqual(Jess,Lily)
Male(Jack)
Male(Oliver)
Male(Ali)
Male(James)
Male(Simon)
Male(Harry)
Female(Helen)
Female(Sophie)
Female(Jess)
Female(Lily)
ParentOf(Jack,Jess)
ParentOf(Jack,Lily)
ParentOf(Jack,LILY)
ParentOf(Helen,Jess)
ParentOf(Helen,Lily)
ParentOf(Helen,LILY)
ParentOf(Oliver,James)
ParentOf(Sophie,James)
ParentOf(Jess,Simon)
ParentOf(Ali,Simon)
ParentOf(Lily,Harry)
ParentOf(James,Harry)
Male(x) & ParentOf(x,y) => FatherOf(x,y)
Female(x) & ParentOf(x,y) => MotherOf(x,y)
Male(x) & ParentOf(x,z) & ParentOf(z,y) => GrandFatherOf(x,y)
Female(x) & ParentOf(x,z) & ParentOf(z,y) => GrandMotherOf(x,y)
Female(x) & FatherOf(f,y) & FatherOf(f,x) & NotEqual(x,y) => SisterOf(x,y)
Female(x) & MotherOf(m,y) & MotherOf(m,x) & NotEqual(x,y) => SisterOf(x,y)
SisterOf(x,y) => SisterOf(y,x)
Female(x) & ParentOf(z,y) & SisterOf(z,x) => AuntOf(x,y)
Male(x) & FatherOf(f,y) & FatherOf(f,x) & NotEqual(x,y) => BrotherOf(x,y)
Male(x) & MotherOf(m,y) & MotherOf(m,x) & NotEqual(x,y) => BrotherOf(x,y)
BrotherOf(x,y) => BrotherOf(y,x)
ParentOf(z,y) & BrotherOf(z,x) => UncleOf(x,y)
ParentOf(x,y) => AncesterOf(x,y)
ParentOf(x,z) & AncesterOf(z,y) => AncesterOf(x,y)
ParentOf(x,z) & ParentOf(y,z) & NotEqual(x,y) => Couple(x,y)
Couple(x,y) & Male(x) => HusbandOf(x,y)
Couple(x,y) & Female(x) => WifeOf(x,y)
